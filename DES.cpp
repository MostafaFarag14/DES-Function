#include <iostream>
#include <cstdint>
#include <bitset>
using namespace std;
long e_mask(uint32_t a ,uint32_t b)
{
	long r=0;
	uint32_t t=1;
	for(int i=a;i<=b;i++)
	{
		r=r|(t<<i);
	}
	//cout<<bitset<32>(r)<<"\n";
	return r;
}
uint64_t c_mask(uint64_t a ,uint64_t b)
{
	uint64_t r=0;
	uint64_t t=1;
	for(int i=a;i<=b;i++)
	{
		r=r|(t<<i);
	}
	//cout<<bitset<64>(r)<<"\n";
	return r;
}
uint32_t s_box(uint64_t x)

{
	
	uint64_t mask;
	long z=0;
	long v=0;
	uint8_t res[8] ;
	int k=0;
	for(int i=47;i>=5;i=i-6)
	{
		mask=c_mask(i-5,i);
		mask=x&mask;
		res[k]=(mask>>(i-5));
		//cout<<bitset<6>(mask)<<"\n";
		k++;
	}
	/*for(int i=0;i<8;i++)
	{
		cout<<bitset<6>(res[i])<<"\n";
	}
	*/
	uint8_t row[8] , col[8] , temp ;
	for(int i=0;i<8;i++)
	{
		col[i]=c_mask(1,4);
		col[i]=res[i] & col[i];
		col[i]=(col[i]>>1);

		row[i]=c_mask(0,0);
		row[i]=row[i] & res[i];
		temp=c_mask(5,5);
		temp=temp & res[i];
		temp=temp>>4;

		row[i]|=temp;
		//cout<<bitset<4>(row[i])<<"\t"<<bitset<4>(col[i])<<"\n";
	}
	unsigned int s[32][16]=
	{
	{14,4,13,1,2,15,11,8,3,10,6,12,5,9,0,7} , 
	{0,15,7,4,14,2,13,1,10,6,12,11,9,5,3,8} , 
	{ 4,1,14,8,13,6,2,11,15,12,9,7,3,10,5,0},  
    {15,12,8,2,4,9,1,7,5,11,3,14,10,0,6,13 },  
	{ 15,1,8,14,6,11,3,4,9,7,2,13,12,0,5,10},  
	{3,13,4,7,15,2,8,14,12,0,1,10,6,9,11,5},  
	{0,14,7,11,10,4,13,1,5,8,12,6,9,3,2,15},  
	{13,8,10,1,3,15,4,2,11,6,7,12,0,5,14,9 },  
	{ 10,0,9,14,6,3,15,5,1,13,12,7,11,4,2,8},  
	{ 13,7,0,9,3,4,6,10,2,8,5,14,12,11,15,1},  
	{ 13,6,4,9,8,15,3,0,11,1,2,12,5,10,14,7},  
	{1,10,13,0,6,9,8,7,4,15,14,3,11,5,2,12 },  
	{ 7,13,14,3,0,6,9,10,1,2,8,5,11,12,4,15},  
	{13,8,11,5,6,15,0,3,4,7,2,12,1,10,14,9},  
	{10,6,9,0,12,11,7,13,15,1,3,14,5,2,8,4},  
	{3,15,0,6,10,1,13,8,9,4,5,11,12,7,2,14 },  
	{ 2,12,4,1,7,10,11,6,8,5,3,15,13,0,14,9},  
	{14,11,2,12,4,7,13,1,5,0,15,10,3,9,8,6},  
	{4,2,1,11,10,13,7,8,15,9,12,5,6,3,0,14},  
	{11,8,12,7,1,14,2,13,6,15,0,9,10,4,5,3 },  
	{ 12,1,10,15,9,2,6,8,0,13,3,4,14,7,5,11},  
	{ 10,15,4,2,7,12,9,5,6,1,13,14,0,11,3,8},  
	{ 9,14,15,5,2,8,12,3,7,0,4,10,1,13,11,6},  
	{ 4,3,2,12,9,5,15,10,11,14,1,7,6,0,8,13 },  
	{ 4,11,2,14,15,0,8,13,3,12,9,7,5,10,6,1},  
	{13,0,11,7,4,9,1,10,14,3,5,12,2,15,8,6},  
	{ 1,4,11,13,12,3,7,14,10,15,6,8,0,5,9,2},  
	{ 6,11,13,8,1,4,10,7,9,5,0,15,14,2,3,12 },  
	{ 13,2,8,4,6,15,11,1,10,9,3,14,5,0,12,7},  
	{1,15,13,8,10,3,7,4,12,5,6,11,0,14,9,2},  
	{ 7,11,4,1,9,12,14,2,0,6,10,13,15,3,5,8},  
	{ 2,1,14,7,4,10,8,13,15,12,9,0,3,5,6,11 } 
													}; 

	for(int i=0;i<8;i++)
	{
		//cout<<hex<<uppercase<<s[row[i]+i*4][col[i]]<<"\n";
		v=s[row[i]+i*4][col[i]];
		v=v<<(28-i*4);
		//cout<<bitset<32>(v)<<"\n";
		z=z|v;
		//cout<<bitset<32>(z)<<"\n";
		
	}
	return z;
}
long per_box( long in)
{
	int p_box [32]={ 16,7,20,21,29,12,28,17,1,15,23,26,5,18,31,10,  
                                         2,8,24,14,32,27,3,9,19,13,30,6,22,11,4,25 }; 
	long x1=0;
	long temp2=0;
	int u;
	for(int i=0;i<32;i++)
	{
		u=33-p_box[i];
		temp2=(in & e_mask(u-1,u-1));
		//cout<<bitset<32>(temp2)<<"\n";
		
			//temp2=temp2<<(31-(u-1)-i);
		if((31-(u-1)-i)>0){
			temp2=temp2<<((31-(u-1)-i));}
		else {
			temp2=temp2>>(abs(31-(u-1)-i));
	}
		//cout<<bitset<32>(in)<<"\n";
		//cout<<bitset<32>(temp2)<<"\n";
		x1|=temp2;
		//cout<<bitset<32>(x1)<<"\n\n";
		
	}
	return x1;
}
void main()
{
	uint32_t in;
	uint64_t key;
	cin>>hex>>in;
	cin>>hex>>key;
	int u=in;
	int e_p_box [48]=
						{32,1,2,3,4,5,4,5,6,7,8,9,  
                        8,9,10,11,12,13,12,13,14,15,16,17,  
                        16,17,18,19,20,21,20,21,22,23,24,25,  
                        24,25,26,27,28,29,28,29,30,31,32,1 }; 
	uint64_t x=0;
	//cin>>hex>>x;
	//cout<<"in "<<bitset<32>(u)<<"\n";
	uint64_t temp=0;
	for(int i=0;i<48;i++)
	{
		temp=(in & e_mask(e_p_box[i]-1,e_p_box[i]-1));
		if((e_p_box[i]-1)>i)
			temp=temp>>(e_p_box[i]-i-1);
		else
			temp=temp<<(i-(e_p_box[i]-1));
		x|=temp;
	}
	//cout<<"e pox "<<bitset<48>(x)<<"\n";
	x=x^key;
	//cout<<"key "<<bitset<48>(key)<<"\n";
	//cout<<"xor "<<bitset<48>(x)<<"\n";
		//cout<<"xor "<<hex<<x<<"\n";
	x=s_box(x);
	//cout<<"s pox "<<hex<<x<<"\n";


	//cout<<bitset<32>(per_box(x))<<"\n";
	cout<<hex<<uppercase<<per_box(x)<<"\n";
	
	//cout<<uppercase<<hex<<x;
}
